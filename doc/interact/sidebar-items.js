initSidebarItems({"enum":[["AssignError",""],["CallError",""],["ClimbError",""],["NextOptions",""],["NodeInfo",""],["Reflect","An arbitrar between the two possible way to climb into an immutable value."],["ReflectMut","An arbitrar between the two possible way to climb into a mutable value."],["TokenKind",""]],"fn":[["deser_assign","A helper for the specific implementations of `Access` to use with `mut_assign` methods"]],"mod":[["access",""],["climber",""],["deser",""],["root",""]],"struct":[["Assist","Given a list of items, this provides assistance for completing them."],["Climber","Climber represents the full state of evaluation of Interact expressions.  It is used within the impls of the `Access` trait, and most likely does not require direct references from `Interact` users, unless manually providing impls of `Accees` not via the `#[derive(Interact)]`."],["ImmutAccess","ImmutAccess adds function call information over `Reflect`."],["MutAccess","MutAccess adds function call information over `ReflectMut`."],["NodeTree","NodeTree represent a reflection of an Interact type that implemented the `Access` trait. It may be a partial reflection due to limits and indirections (see `Reflector`)."],["Reflector","`Reflector` operates on types implementing `Access`. Some of its methods are behind called automatically from `#[derive(Interact)] impls. It provides a thread-safe context, because on the extreme case, where it is possible that reflection is done via indirection using multiple process threads (see`ReflectIndirect`)."],["Root","A temporary binder of `RootSend` and `RootLocal` dictionaries, used for providing a unified dictionary to the user."],["RootLocal","Holds a root dictionary of trait objects that implement `Access` and are therefore Interact-able. These are most likely objects that are held locally behind an `Rc`."],["RootSend","Holds a root dictionary of `Send`-able trait objects that implement `Access` and are therefor Interact-able. These are most likely objects that are held globally behind an `Arc`."],["Token","Represents a single meaningful substring part in an Interact string expression."],["TokenVec","Wrapper for the traversal of a borrowed list of tokens."]],"trait":[["Access","The `Access` trait, meant to be used as a trait objects provides methods that dynamically expose read&write access to the underlying objects."],["Deser",""],["ReflectDirect","The direct Reflect allows direct climber or reflector access, and meant to be used as a trait object for that purpose."],["ReflectIndirect","The indirect Reflect allows indirect climber or reflector access, and meant to be used as a trait object for that purpose."]],"type":[["RetValCallback",""]]});